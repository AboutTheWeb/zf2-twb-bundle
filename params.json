{"name":"Zf2-twb-bundle","tagline":"Zend Framework 2 module for easy integration of Twitter Bootstrap","body":"TwbBundle\r\n=====================\r\n\r\n[![Build Status](https://travis-ci.org/neilime/zf2-twb-bundle.png?branch=master)](https://travis-ci.org/neilime/zf2-twb-bundle)\r\n\r\nCreated by Neilime\r\n\r\nIntroduction\r\n------------\r\n\r\n__TwbBundle__ is a module for Zend Framework 2, for easy integration of the [Twitter Bootstrap](https://github.com/twitter/bootstrap). \r\n\r\n_P.S. Sorry for my english. If You wish to help me with this project or correct my english description - You are welcome :)_\r\n\r\nRequirements\r\n------------\r\n\r\n* [Zend Framework 2](https://github.com/zendframework/zf2) (latest master)\r\n* [Twitter Bootstrap](https://github.com/twitter/bootstrap) (latest master)\r\n\r\nInstallation\r\n------------\r\n\r\n### Main Setup\r\n\r\n#### By cloning project\r\n\r\n1. Clone this project into your `./vendor/` directory.\r\n2. (Optionnal) Clone the [Twitter bootstrap project](https://github.com/twitter/bootstrap) (latest master) into your `./vendor/` directory.\r\n\r\n#### With composer\r\n\r\n1. Add this project in your composer.json:\r\n\r\n    ```json\r\n    \"require\": {\r\n        \"neilime/zf2-twb-bundle\": \"dev-master\"\r\n    }\r\n    ```\r\n\r\n2. Now tell composer to download __TwbBundle__ by running the command:\r\n\r\n    ```bash\r\n    $ php composer.phar update\r\n    ```\r\n\r\n#### Post installation\r\n\r\n1. Enabling it in your `application.config.php` file.\r\n\r\n    ```php\r\n    return array(\r\n        'modules' => array(\r\n            // ...\r\n            'TwbBundle',\r\n        ),\r\n        // ...\r\n    );\r\n    ```\r\n\r\n2. Include Twitter Bootstrap assets\r\n\r\n###### With __AssetsBundle__ module (easy way)\r\n    \r\n* Install the [AssetsBundle module ](https://github.com/neilime/zf2-assets-bundle)(latest master)\r\n* Edit the application module configuration file `module/Application/config/module.config.php`, adding the configuration fragment below:\r\n\r\n    ```php\r\n    return array(\r\n        //...\r\n         'asset_bundle' => array(\r\n             'assets' => array(\r\n                 'less' => array('@zfRootPath/vendor/twitter/bootstrap/less/bootstrap.less')\r\n             )\r\n         ),\r\n         //...\r\n     );\r\n     ```\r\n\r\n* Edit layout file `module/Application/view/layout/layout.phtml`, to render head scripts :\r\n\r\n    ```php\r\n    //...    \r\n    echo $this->headScript();\r\n    //...\r\n    ```\r\n\r\n###### Manually\r\n    \r\n* Copy `vendor/twitter/bootstrap/docs/assets/css/bootstrap.css` file into your asset folder and add it in your head scripts\r\n    \r\n# How to use __TwbBundle__\r\n\r\n## Simple examples\r\n\r\n* Render a dropdown button\r\n\r\n    ```php\r\n    //...\r\n    //Create button\r\n    $button = new \\Zend\\Element\\Button('test-button',array(\r\n        'label' => 'Action',\r\n        'dropdown' => array('actions' => array(\r\n            'Action',\r\n            'Another action',\r\n            'Something else here',\r\n            '-',\r\n            'Separated link'\r\n        ))\r\n    )));\r\n    //Render it in your view\r\n    echo $this->formButton($button);\r\n    //...\r\n    ```\r\n\r\n* Render a search form\r\n\r\n    ```php\r\n    //...\r\n    //Create form\r\n    $form = new \\Zend\\Form\\Form();\r\n    $form->add(array(\r\n        'name' => 'input-search-append',\r\n        'attributes' => array(\r\n            'class' => 'search-query input-medium'\r\n        ),\r\n        'options' => array('twb' => array(\r\n            'append' => array(\r\n                'type' => 'buttons',\r\n                'buttons' => array(\r\n                    'search-submit-append' => array(\r\n                        'options' => array('label' => 'Search'),\r\n                        'attributes' => array('type' => 'submit')\r\n                    )\r\n                )\r\n            )\r\n        ))\r\n    ))->add(array(\r\n        'name' => 'input-search-prepend',\r\n        'attributes' => array(\r\n            'class' => 'search-query input-medium'\r\n        ),\r\n        'options' => array('twb' => array(\r\n            'prepend' => array(\r\n                'type' => 'buttons',\r\n                'buttons' => array(\r\n                    'search-submit-prepend' => array(\r\n                        'options' => array('label' => 'Search'),\r\n                        'attributes' => array('type' => 'submit')\r\n                    )\r\n                )\r\n            )\r\n        ))\r\n    ));\r\n    //Render it in your view\r\n    $this->form($form,\\TwbBundle\\Form\\View\\Helper\\TwbBundleForm::LAYOUT_SEARCH);\r\n    //...\r\n    ```\r\n\r\n## Features\r\n\r\n__TwbBundle__ is abble to render [Twitter bootstrap demo site](http://twitter.github.com/bootstrap) forms, inputs, buttons, & alerts. (tests are written in order to cover what is showed on demo site)\r\n\r\n### 1. Forms\r\n\r\n_Render \\Zend\\Form\\FormInterface_\r\n\r\n#### Form layout :\r\n\r\nLayout should be defined when form view helper is invoked\r\n\r\n* None : `null`\r\n* Search form : `\\TwbBundle\\Form\\View\\Helper\\TwbBundleForm::LAYOUT_SEARCH`\r\n* Inline form : `\\TwbBundle\\Form\\View\\Helper\\TwbBundleForm::LAYOUT_INLINE`\r\n* Horizontal form (default) : `\\TwbBundle\\Form\\View\\Helper\\TwbBundleForm::LAYOUT_HORIZONTAL`\r\n\r\n\tExemple : \r\n\t    \r\n\t```php\r\n\t//...\r\n\t$this->form($form,\\TwbBundle\\Form\\View\\Helper\\TwbBundleForm::LAYOUT_INLINE);\r\n\t//...    \r\n\t```\r\n\r\n### 2. Inputs\r\n\r\n_Render \\Zend\\Form\\ElementInterface_\r\n\r\nAll elements options are defined in `twb` (array)\r\n\r\n```php\r\nnew \\Zend\\Form\\Element('test-element',array(\r\n    'twb' => array(\r\n        /** TwbBundle options **/\r\n    )\r\n);\r\n```\r\n\r\n#### Appended and / or prepended\r\n\r\nFor all prepended / appended types : \r\n\r\n```php\r\nnew \\Zend\\Form\\Element('test-element',array(\r\n    'twb' => array(\r\n        'prepend' => array(\r\n            'type' => 'prepended type',\r\n            //Prepended type option\r\n        ),\r\n        'append' => array(\r\n            'type' => 'appended type',\r\n            //Appended type option\r\n        )\r\n    )\r\n);\r\n```\r\n\r\n* Text :\r\n\r\n    _Appended / prepended texts are translated_\r\n\r\n    ```php\r\n    //Prepended text\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'prepend' => array(\r\n                'type' => 'text',\r\n                'text' => 'Prepended text'\r\n            )\r\n        )\r\n    );\r\n    ```\r\n\r\n* Icon : \r\n\r\n    ```php\r\n    //Appended icon\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'append' => array(\r\n                'type' => 'icon',\r\n                'icon' => 'icon-enveloppe' //icon class\r\n            )\r\n        )\r\n    );\r\n    ```\r\n\r\n* Button(s) :\r\n\r\n    _Button options are explained [below](#buttons)._\r\n \r\n    ```php\r\n    //Appended buttons\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'append' => array(\r\n                'type' => 'buttons',\r\n                'buttons' => array(\r\n                    'button-one' => array(\r\n                    \t/* Button factory options, name is not mandatory if given with the array key */\r\n                    ),\r\n                    new \\Zend\\Form\\Element\\Button('button-two',array(/* Button options */))\r\n                )\r\n            )\r\n        )\r\n    );\r\n    ```\r\n\r\n* Or what ever you want :\r\n\r\n    ```php\r\n    //Appended markup\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'append' => '<span>Simple appended text</span>'\r\n        )\r\n    );\r\n    ```\r\n\r\n#### Form actions\r\n\r\nThis option allows an element to be in form actions part\r\n\r\n```php\r\n//Element in form actions\r\nnew \\Zend\\Form\\Element('test-element',array(\r\n\t'twb' => array(\r\n\t\t'formAction' => true\r\n\t)\r\n);\r\n```\r\n\r\n#### Help\r\n\r\n* Inline\r\n    ```php\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'help-inline' => 'Inline help text'\r\n        )\r\n    );\r\n    ```\r\n\r\n* Block\r\n    ```php\r\n    new \\Zend\\Form\\Element('test-element',array(\r\n        'twb' => array(\r\n            'help-block' => 'A longer block of help text that breaks onto a new line and may extend beyond one line.'\r\n        )\r\n    );\r\n    ```\r\n\r\n#### Validation states\r\n\r\nValidations states are only rendered with horizontal form layout, validation status \"error\" is automatically added when the element contains at least one error message.\r\n\r\n```php\r\n//Element with \"info\" state\r\nnew \\Zend\\Form\\Element('test-element',array(\r\n    'twb' => array(\r\n        'state' => 'info'\r\n    )\r\n);\r\n```\r\n\r\n### 3. Buttons\r\n\r\nRender \\Zend\\Form\\Element\\Button\r\n\r\n#### Icons\r\n\r\n```php\r\nnew \\Zend\\Form\\Element\\Button('test-button',array(\r\n    'twb' => array(\r\n        'icon' => 'icon-info'\r\n    )\r\n);\r\n```\r\n\r\n#### Button dropdowns\r\n\r\n```php\r\nnew \\Zend\\Form\\Element\\Button('test-button',array(\r\n    'twb' => array(\r\n        'dropdown' => array(\r\n            'actions' => array(\r\n                /** action options **/\r\n            )\r\n        )\r\n    )\r\n);\r\n```\r\n\r\n#### Split button dropdowns\r\n\r\n```php\r\nnew \\Zend\\Form\\Element\\Button('test-button',array(\r\n    'twb' => array(\r\n        'dropdown' => array(\r\n            'segmented' => true,\r\n            'actions' => array(\r\n                /** action options **/\r\n            )\r\n        )\r\n    )\r\n);\r\n```\r\n\r\n#### Right menus\r\n\r\n```php\r\nnew \\Zend\\Form\\Element\\Button('test-button',array(\r\n    'twb' => array(\r\n        'dropdown' => array(\r\n        \t'pull' => 'right',\r\n            'actions' => array(\r\n                /** action options **/\r\n            )\r\n        )\r\n    )\r\n);\r\n```\r\n\r\n#### Dropup menus\r\n\r\n```php\r\nnew \\Zend\\Form\\Element\\Button('test-button',array(\r\n    'twb' => array(\r\n        'dropup' => array(\r\n            /** dropup options (same as dropdown **/\r\n        )\r\n    )\r\n);\r\n```\r\n\r\n#### Actions options\r\n\r\nShould be `string` or `array`\r\n\r\n* String : The label name (would be translated), href url is # + String value.\r\n\tExemple : \r\n\t```php\r\n\t//...\r\n\t'actions' => array(\r\n\t    'test' //Render <li><a href=\"#test\">test</a></li>\r\n\t)\r\n\t//...\r\n\t```\r\n\r\n\tYou can render a `divider` by using  `-` as label name\r\n\r\n\tExemple : \r\n    ```php\r\n    //...\r\n    'actions' => array(\r\n        '-' //Render <li class=\"divider\"></li>\r\n    )\r\n    //...\r\n    ```\r\n\r\n* Array (available options):\r\n    - `string` label : the label name (would be translated)\r\n    - `string` content : markup, if `label` is defined, this option is not used\r\n    - `string` icon : (optionnal) the icon class to prepend to label or content\r\n    - `string` href : (optionnal) href for the link, default `#`\r\n    - ... : all attributes you want for the link element (onclick, class...)\r\n    \r\n    Exemple : \r\n    ```php\r\n    //...\r\n    'actions' => array(\r\n        array(\r\n        \t'label' => 'Test action',\r\n        \t'icon' => 'icon-user',\r\n        \t'href' => 'test.html',\r\n        \t'class' => 'test-class'\r\n        ) // Render <li><a href=\"test.html\" class=\"test-class\"><i class=\"icon-user\"></i> Test action</a></li>\r\n    )\r\n    //...\r\n    ```\r\n\r\n### 4. Alerts\r\n\r\n_Render alerts_\r\n\r\nExemple : \r\n    \r\n```php\r\n//...\r\n$this->alert('Test message','alert-error');\r\n//...    \r\n```\r\n\r\n#### Params\r\n- `string` alert message :  (would be translated)\r\n- `string` alert class : (optionnal)\r\n- `boolean` close : show close button or not, default true","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}